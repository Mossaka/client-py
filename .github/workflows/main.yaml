name: Build and publish

on:
  push:
    branches:
      - master

# on: [workflow_dispatch]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest]
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.5", "3.6", "3.7", "3.8", "3.9"]
    name: Build with Python ${{ matrix.python-version }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Add MSBuild to PATH
        if: ${{ matrix.os == 'windows-latest' }}
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Install gPRC
        if: ${{ matrix.os == 'windows-latest' }}
        run: vcpkg install grpc:x64-windows
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install pip dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin twine
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
      - name: Build package
        run: |
          maturin build --interpreter python${{ matrix.python-version }}
      - name: Publish package to PyPi
        run: |
          maturin publish --interpreter python${{ matrix.python-version }} --repository-url https://test.pypi.org/legacy/ -u ${{ secrets.TWINE_USERNAME }} -p ${{ secrets.TWINE_PASSWORD }}
      # - name: Publish package to PyPI
      #   env:
      #     TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      #     TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      #   run: |
      #     twine upload --repository-url https://test.pypi.org/legacy/ target/wheels/*.whl
